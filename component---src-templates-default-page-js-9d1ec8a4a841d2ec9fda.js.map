{"version":3,"file":"component---src-templates-default-page-js-9d1ec8a4a841d2ec9fda.js","mappings":"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","sources":["webpack://uclathetatau/./src/components/Content.js","webpack://uclathetatau/./src/components/FullWidthImage.js","webpack://uclathetatau/./src/components/FullWidthImageSmall.js","webpack://uclathetatau/./src/components/Layout.js","webpack://uclathetatau/./src/templates/default-page.js"],"sourcesContent":["import * as React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const HTMLContent = ({ content, className }) => (\n  <div className={className} dangerouslySetInnerHTML={{ __html: content }} />\n);\n\nconst Content = ({ content, className }) => (\n  <div className={className}>{content}</div>\n);\n\nContent.propTypes = {\n  content: PropTypes.node,\n  className: PropTypes.string,\n};\n\nHTMLContent.propTypes = Content.propTypes;\n\nexport default Content;\n","import React from \"react\";\nimport { Link } from 'gatsby';\nimport PropTypes from \"prop-types\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport \"./styles.css\";\nimport \"./buttonStyle.css\";\n\nexport default function FullWidthImage(props) {\n  const {\n    height = \"100vh\",\n    img,\n    title,\n    subheading,\n    imgPosition = \"center\",\n  } = props;\n\n  console.log(img);\n\n  return (\n    <React.Fragment>\n      <div\n        className=\"margin-top-0\"\n        style={{\n          display: \"grid\",\n          alignItems: \"center\",\n          backgroundColor: \"#40140f\",\n          zIndex: -1,\n          flexShrink: 0,\n          minWidth: '100%',\n          minHeight: '100%'\n          // backgroundColor: \"black\",\n        }}\n      >\n        {!img?.url ? (\n          <img\n            src={img}\n            objectFit={\"cover\"}\n            objectPosition={imgPosition}\n            style={{\n              gridArea: \"1/1\",\n              // You can set a maximum height for the image, if you wish.\n              // minHeight: '100%',\n              minHeight: '25vh',\n              opacity: 0.5,\n            }}\n            // You can optionally force an aspect ratio for the generated image\n            aspectratio={3 / 1}\n            // This is a presentational image, so the alt should be an empty string\n            alt=\"\"\n            formats={[\"auto\", \"webp\", \"avif\"]}\n          />\n        ) : (\n          <GatsbyImage\n            image={img}\n            objectFit={\"cover\"}\n            objectPosition={imgPosition}\n            style={{\n              gridArea: \"1/1\",\n              // You can set a maximum height for the image, if you wish.\n              minHeight: \"100vh\",\n              opacity: 0.5,\n            }}\n            layout=\"fullWidth\"\n            // You can optionally force an aspect ratio for the generated image\n            aspectratio={3 / 1}\n            // This is a presentational image, so the alt should be an empty string\n            alt=\"\"\n            formats={[\"auto\", \"webp\", \"avif\"]}\n          />\n        )}\n        {(title || subheading) && (\n          <div\n            style={{\n              // By using the same grid area for both, they are stacked on top of each other\n              paddingTop: \"5vmax\",\n              // paddingBottom: \"10vmax\",\n              gridArea: \"1/1\",\n              position: \"relative\",\n              // This centers the other elements inside the hero component\n              placeItems: \"center\",\n              display: \"grid\",\n            }}\n          >\n            {/* Any content here will be centered in the component */}\n            {title && (\n              <h1\n                className=\"has-text-weight-bold homefont\"\n                style={{\n                  // boxShadow:\n                    // \"rgb(255, 68, 0) 0.5rem 0px 0px, rgb(255, 68, 0) -0.5rem 0px 0px\",\n                  // backgroundColor: \"rgb(255, 68, 0)\",\n                  color: \"white\",\n                  borderColor: \"white\",\n                  lineHeight: \"1\",\n                  padding: \"0.25em\",\n                  // fontSize: \"3.5rem\",\n                }}\n              >\n                {title}\n              </h1>\n            )}\n            {subheading && (\n              <h3\n                className=\"is-size-5-mobile is-size-5-tablet is-size-4-widescreen\"\n                style={{\n                  // boxShadow:\n                  //   \"rgb(255, 68, 0) 0.5rem 0px 0px, rgb(255, 68, 0) -0.5rem 0px 0px\",\n                  // backgroundColor: \"rgb(255, 68, 0)\",\n                  color: \"white\",\n                  lineHeight: \"1\",\n                  padding: \"0.25rem\",\n                  marginTop: \"0.5rem\",\n                  textAlign: \"center\",\n                }}\n              >\n                {subheading}\n              </h3>\n            )}\n            {/*(<Link to='/rush'>\n                <button\n                class=\"button-27\"\n                role=\"button\"\n                style= {{\n                    backgroundColor: \"#A3A3A3\",\n                    color: \"#000\",\n                    borderColor: \"#fff\",\n                    marginTop: \"-0.5rem\",\n                    borderRadius: '10px',\n                    marginBottom: '-1.5rem',\n                    borderColor: '#A3A3A3',\n                    \n                }}\n                >\n                  \n                    <h5\n                      className=\"is-size-5-mobile is-size-5-tablet is-size-5-widescreen\"\n                      style={{\n                        color: 'white',\n                      lineHeight: \"1\",\n                      padding: \"1rem\",\n                      // marginTop: \"0.5rem\",  \n                    }}>\n                      Fall Rush 2022\n                    </h5>\n                  \n              </button>\n              </Link>)*/}\n          </div>          \n        )}\n        \n      </div>\n    </React.Fragment>\n  );\n}\n\nFullWidthImage.propTypes = {\n  img: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  title: PropTypes.string,\n  height: PropTypes.number,\n  subheading: PropTypes.string,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport \"./styles.css\";\n\nexport default function FullWidthImageSmall(props) {\n  const {\n    height = \"100vh\",\n    img,\n    title,\n    subheading,\n    imgPosition = \"center\",\n  } = props;\n\n  return (\n    <React.Fragment>\n      <div\n        className=\"margin-top-0\"\n        style={{\n          display: \"grid\",\n          alignItems: \"center\",\n          backgroundColor: \"black\",\n          backgroundColor: \"#40140f\",\n          zIndex: -1,\n          paddingTop: '0px',\n        }}\n      >\n        {img?.url ? (\n          <img\n            src={img}\n            objectFit={\"cover\"}\n            objectPosition={imgPosition}\n            style={{\n              gridArea: \"1/1\",\n              // You can set a maximum height for the image, if you wish.\n              height: height,\n              width: \"100%\",\n            }}\n            // You can optionally force an aspect ratio for the generated image\n            aspectratio={3 / 1}\n            // This is a presentational image, so the alt should be an empty string\n            alt=\"\"\n            formats={[\"auto\", \"webp\", \"avif\"]}\n          />\n        ) : (\n          <GatsbyImage\n            image={img}\n            objectFit={\"cover\"}\n            objectPosition={imgPosition}\n            style={{\n              gridArea: \"1/1\",\n              // You can set a maximum height for the image, if you wish.\n              maxHeight: height,\n              minHeight: \"100vh\",\n              opacity: 0.5,\n            }}\n            layout=\"fullWidth\"\n            // You can optionally force an aspect ratio for the generated image\n            aspectratio={3 / 1}\n            // This is a presentational image, so the alt should be an empty string\n            alt=\"\"\n            formats={[\"auto\", \"webp\", \"avif\"]}\n          />\n        )}\n        {(title || subheading) && (\n          <div\n            style={{\n              // By using the same grid area for both, they are stacked on top of each other\n              paddingTop: \"1vmax\",\n              // paddingBottom: \"10vmax\",\n              gridArea: \"1/1\",\n              position: \"relative\",\n              // This centers the other elements inside the hero component\n              placeItems: \"center\",\n              display: \"grid\",\n            }}\n          >\n            {/* Any content here will be centered in the component */}\n            {title && (\n              <h1\n                className=\"has-text-weight-bold homefont\"\n                style={{\n                  // boxShadow:\n                    // \"rgb(255, 68, 0) 0.5rem 0px 0px, rgb(255, 68, 0) -0.5rem 0px 0px\",\n                  // backgroundColor: \"rgb(255, 68, 0)\",\n                  color: \"white\",\n                  borderColor: \"white\",\n                  lineHeight: \"1\",\n                  padding: \"0.25em\",\n                  // fontSize: \"3.5rem\",\n                }}\n              >\n                {title}\n              </h1>\n            )}\n            {subheading && (\n              <h3\n                className=\"is-size-5-mobile is-size-5-tablet is-size-4-widescreen\"\n                style={{\n                  // boxShadow:\n                  //   \"rgb(255, 68, 0) 0.5rem 0px 0px, rgb(255, 68, 0) -0.5rem 0px 0px\",\n                  // backgroundColor: \"rgb(255, 68, 0)\",\n                  color: \"white\",\n                  lineHeight: \"1\",\n                  padding: \"0.25rem\",\n                  marginTop: \"0.5rem\",\n                  textAlign: \"center\",\n                  marginBottom: \"3.3vmax\",\n                }}\n              >\n                {subheading}\n              </h3>\n            )}\n          </div>          \n        )}\n        \n      </div>\n    </React.Fragment>\n  );\n}\n\nFullWidthImageSmall.propTypes = {\n  img: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  title: PropTypes.string,\n  height: PropTypes.number,\n  subheading: PropTypes.string,\n};\n","import * as React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport Footer from \"../components/Footer\";\nimport Navbar from \"../components/Navbar\";\nimport \"./all.sass\";\nimport useSiteMetadata from \"./SiteMetadata\";\nimport { withPrefix } from \"gatsby\";\n\nconst TemplateWrapper = ({ children }) => {\n  const { title, description } = useSiteMetadata();\n  return (\n    <div>\n      <Helmet>\n        <html lang=\"en\" />\n        <title>{title}</title>\n        <meta name=\"description\" content={description} />\n\n        <link\n          rel=\"icon\"\n          type=\"image/png\"\n          href={`${withPrefix(\"/\")}img/favicon-32x32.png`}\n          sizes=\"32x32\"\n        />\n        <link\n          rel=\"icon\"\n          type=\"image/png\"\n          href={`${withPrefix(\"/\")}img/favicon-16x16.png`}\n          sizes=\"16x16\"\n        />\n\n        <link\n          rel=\"mask-icon\"\n          href={`${withPrefix(\"/\")}img/safari-pinned-tab.svg`}\n          color=\"#ff4400\"\n        />\n        <meta name=\"theme-color\" content=\"#fff\" />\n\n        <meta property=\"og:type\" content=\"business.business\" />\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:url\" content=\"/\" />\n        <meta\n          property=\"og:image\"\n          content={`${withPrefix(\"/\")}img/og-image.jpg`}\n        />\n      </Helmet>\n      <Navbar />\n      <div>{children}</div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default TemplateWrapper;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { graphql } from \"gatsby\";\nimport { getImage } from \"gatsby-plugin-image\";\nimport Layout from \"../components/Layout\";\nimport Content, { HTMLContent } from \"../components/Content\";\n\nimport FullWidthImage from \"../components/FullWidthImage\";\nimport FullWidthImageSmall from \"../components/FullWidthImageSmall\";\n\n// eslint-disable-next-line\nexport const DefaultPageTemplate = ({ title, content, contentComponent, image, subheading }) => {\n    const heroImage = getImage(image) || image;\n\n    const PageContent = contentComponent || Content;\n\n    return (\n        <div>\n            <FullWidthImageSmall img={heroImage} title={title} subheading={subheading} />\n            <section className=\"section section--gradient\">\n            <div className=\"container\">\n                <div className=\"columns\">\n                <div className=\"column is-10 is-offset-1\">\n                    <div className=\"section\">\n                    <PageContent className=\"content\" content={content} />\n                    </div>\n                </div>\n                </div>\n            </div>\n            </section>\n        </div>\n    );\n};\n\nDefaultPageTemplate.propTypes = {\n  title: PropTypes.string.isRequired,\n  content: PropTypes.string,\n  contentComponent: PropTypes.func,\n};\n\nconst DefaultPage = ({ data }) => {\n  const { markdownRemark: post } = data;\n\n  return (\n    <Layout>\n      <DefaultPageTemplate\n        contentComponent={HTMLContent}\n        title={post.frontmatter.title}\n        content={post.html}\n      />\n    </Layout>\n  );\n};\n\nDefaultPage.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport default DefaultPage;\n\nexport const defaultPageQuery = graphql`\n  query DefaultPage($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      html\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["HTMLContent","content","className","dangerouslySetInnerHTML","__html","FullWidthImage","props","height","img","title","subheading","imgPosition","console","log","style","display","alignItems","backgroundColor","zIndex","flexShrink","minWidth","minHeight","url","G","image","objectFit","objectPosition","gridArea","opacity","layout","aspectratio","alt","formats","src","paddingTop","position","placeItems","color","borderColor","lineHeight","padding","marginTop","textAlign","FullWidthImageSmall","width","maxHeight","marginBottom","children","useSiteMetadata","description","lang","name","rel","type","href","withPrefix","sizes","property","DefaultPageTemplate","contentComponent","heroImage","getImage","PageContent","Content","post","data","markdownRemark","frontmatter","html"],"sourceRoot":""}