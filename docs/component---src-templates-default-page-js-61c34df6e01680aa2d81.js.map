{"version":3,"file":"component---src-templates-default-page-js-61c34df6e01680aa2d81.js","mappings":"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","sources":["webpack://uclathetatau/./src/components/Content.js","webpack://uclathetatau/./src/components/FullWidthImage.js","webpack://uclathetatau/./src/components/FullWidthImageSmall.js","webpack://uclathetatau/./src/templates/default-page.js"],"sourcesContent":["import * as React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const HTMLContent = ({ content, className }) => (\r\n  <div className={className} dangerouslySetInnerHTML={{ __html: content }} />\r\n);\r\n\r\nconst Content = ({ content, className }) => (\r\n  <div className={className}>{content}</div>\r\n);\r\n\r\nContent.propTypes = {\r\n  content: PropTypes.node,\r\n  className: PropTypes.string,\r\n};\r\n\r\nHTMLContent.propTypes = Content.propTypes;\r\n\r\nexport default Content;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { GatsbyImage } from \"gatsby-plugin-image\";\r\nimport \"./styles.css\";\r\n\r\nexport default function FullWidthImage(props) {\r\n  const {\r\n    height = \"100vh\",\r\n    img,\r\n    title,\r\n    subheading,\r\n    imgPosition = \"center\",\r\n  } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        className=\"margin-top-0\"\r\n        style={{\r\n          display: \"grid\",\r\n          alignItems: \"center\",\r\n          backgroundColor: \"#40140f\",\r\n          zIndex: -1,\r\n          // backgroundColor: \"black\",\r\n        }}\r\n      >\r\n        {img?.url ? (\r\n          <img\r\n            src={img}\r\n            objectFit={\"cover\"}\r\n            objectPosition={imgPosition}\r\n            style={{\r\n              gridArea: \"1/1\",\r\n              // You can set a maximum height for the image, if you wish.\r\n              height: height,\r\n              width: \"100%\",\r\n            }}\r\n            // You can optionally force an aspect ratio for the generated image\r\n            aspectratio={3 / 1}\r\n            // This is a presentational image, so the alt should be an empty string\r\n            alt=\"\"\r\n            formats={[\"auto\", \"webp\", \"avif\"]}\r\n          />\r\n        ) : (\r\n          <GatsbyImage\r\n            image={img}\r\n            objectFit={\"cover\"}\r\n            objectPosition={imgPosition}\r\n            style={{\r\n              gridArea: \"1/1\",\r\n              // You can set a maximum height for the image, if you wish.\r\n              maxHeight: height,\r\n              minHeight: \"100vh\",\r\n              opacity: 0.5,\r\n            }}\r\n            layout=\"fullWidth\"\r\n            // You can optionally force an aspect ratio for the generated image\r\n            aspectratio={3 / 1}\r\n            // This is a presentational image, so the alt should be an empty string\r\n            alt=\"\"\r\n            formats={[\"auto\", \"webp\", \"avif\"]}\r\n          />\r\n        )}\r\n        {(title || subheading) && (\r\n          <div\r\n            style={{\r\n              // By using the same grid area for both, they are stacked on top of each other\r\n              paddingTop: \"10vmax\",\r\n              // paddingBottom: \"10vmax\",\r\n              gridArea: \"1/1\",\r\n              position: \"relative\",\r\n              // This centers the other elements inside the hero component\r\n              placeItems: \"center\",\r\n              display: \"grid\",\r\n            }}\r\n          >\r\n            {/* Any content here will be centered in the component */}\r\n            {title && (\r\n              <h1\r\n                className=\"has-text-weight-bold homefont\"\r\n                style={{\r\n                  // boxShadow:\r\n                    // \"rgb(255, 68, 0) 0.5rem 0px 0px, rgb(255, 68, 0) -0.5rem 0px 0px\",\r\n                  // backgroundColor: \"rgb(255, 68, 0)\",\r\n                  color: \"white\",\r\n                  borderColor: \"white\",\r\n                  lineHeight: \"1\",\r\n                  padding: \"0.25em\",\r\n                  // fontSize: \"3.5rem\",\r\n                }}\r\n              >\r\n                {title}\r\n              </h1>\r\n            )}\r\n            {subheading && (\r\n              <h3\r\n                className=\"is-size-5-mobile is-size-5-tablet is-size-4-widescreen\"\r\n                style={{\r\n                  // boxShadow:\r\n                  //   \"rgb(255, 68, 0) 0.5rem 0px 0px, rgb(255, 68, 0) -0.5rem 0px 0px\",\r\n                  // backgroundColor: \"rgb(255, 68, 0)\",\r\n                  color: \"white\",\r\n                  lineHeight: \"1\",\r\n                  padding: \"0.25rem\",\r\n                  marginTop: \"0.5rem\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                {subheading}\r\n              </h3>\r\n            )}\r\n            {(<a href='/rush'>\r\n                <button\r\n                style= {{\r\n                    backgroundColor: \"#fff\",\r\n                    borderColor: \"#fff\",\r\n                    marginTop: \"1rem\",\r\n                    borderRadius: '15px',\r\n                }}\r\n                >\r\n                  \r\n                    <h4 \r\n                      className=\"is-size-5-mobile is-size-5-tablet is-size-5-widescreen\"\r\n                      style={{\r\n                        // color: \"white\",\r\n                      lineHeight: \"1\",\r\n                      padding: \"1.5rem\",\r\n                      // marginTop: \"0.5rem\",  \r\n                    }}>\r\n                      Fall Rush 2022\r\n                    </h4>\r\n                  \r\n              </button>\r\n            </a>)}\r\n          </div>          \r\n        )}\r\n        \r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nFullWidthImage.propTypes = {\r\n  img: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\r\n  title: PropTypes.string,\r\n  height: PropTypes.number,\r\n  subheading: PropTypes.string,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { GatsbyImage } from \"gatsby-plugin-image\";\r\nimport \"./styles.css\";\r\n\r\nexport default function FullWidthImageSmall(props) {\r\n  const {\r\n    height = \"100vh\",\r\n    img,\r\n    title,\r\n    subheading,\r\n    imgPosition = \"center\",\r\n  } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        className=\"margin-top-0\"\r\n        style={{\r\n          display: \"grid\",\r\n          alignItems: \"center\",\r\n          backgroundColor: \"#40140f\",\r\n          zIndex: -1,\r\n          // backgroundColor: \"black\",\r\n        }}\r\n      >\r\n        {img?.url ? (\r\n          <img\r\n            src={img}\r\n            objectFit={\"cover\"}\r\n            objectPosition={imgPosition}\r\n            style={{\r\n              gridArea: \"1/1\",\r\n              // You can set a maximum height for the image, if you wish.\r\n              height: height,\r\n              width: \"100%\",\r\n            }}\r\n            // You can optionally force an aspect ratio for the generated image\r\n            aspectratio={3 / 1}\r\n            // This is a presentational image, so the alt should be an empty string\r\n            alt=\"\"\r\n            formats={[\"auto\", \"webp\", \"avif\"]}\r\n          />\r\n        ) : (\r\n          <GatsbyImage\r\n            image={img}\r\n            objectFit={\"cover\"}\r\n            objectPosition={imgPosition}\r\n            style={{\r\n              gridArea: \"1/1\",\r\n              // You can set a maximum height for the image, if you wish.\r\n              maxHeight: height,\r\n              minHeight: \"100vh\",\r\n              opacity: 0.5,\r\n            }}\r\n            layout=\"fullWidth\"\r\n            // You can optionally force an aspect ratio for the generated image\r\n            aspectratio={3 / 1}\r\n            // This is a presentational image, so the alt should be an empty string\r\n            alt=\"\"\r\n            formats={[\"auto\", \"webp\", \"avif\"]}\r\n          />\r\n        )}\r\n        {(title || subheading) && (\r\n          <div\r\n            style={{\r\n              // By using the same grid area for both, they are stacked on top of each other\r\n              paddingTop: \"10vmax\",\r\n              // paddingBottom: \"10vmax\",\r\n              gridArea: \"1/1\",\r\n              position: \"relative\",\r\n              // This centers the other elements inside the hero component\r\n              placeItems: \"center\",\r\n              display: \"grid\",\r\n            }}\r\n          >\r\n            {/* Any content here will be centered in the component */}\r\n            {title && (\r\n              <h1\r\n                className=\"has-text-weight-bold homefont\"\r\n                style={{\r\n                  // boxShadow:\r\n                    // \"rgb(255, 68, 0) 0.5rem 0px 0px, rgb(255, 68, 0) -0.5rem 0px 0px\",\r\n                  // backgroundColor: \"rgb(255, 68, 0)\",\r\n                  color: \"white\",\r\n                  borderColor: \"white\",\r\n                  lineHeight: \"1\",\r\n                  padding: \"0.25em\",\r\n                  // fontSize: \"3.5rem\",\r\n                }}\r\n              >\r\n                {title}\r\n              </h1>\r\n            )}\r\n            {subheading && (\r\n              <h3\r\n                className=\"is-size-5-mobile is-size-5-tablet is-size-4-widescreen\"\r\n                style={{\r\n                  // boxShadow:\r\n                  //   \"rgb(255, 68, 0) 0.5rem 0px 0px, rgb(255, 68, 0) -0.5rem 0px 0px\",\r\n                  // backgroundColor: \"rgb(255, 68, 0)\",\r\n                  color: \"white\",\r\n                  lineHeight: \"1\",\r\n                  padding: \"0.25rem\",\r\n                  marginTop: \"0.5rem\",\r\n                  textAlign: \"center\",\r\n                  marginBottom: \"3.3vmax\",\r\n                }}\r\n              >\r\n                {subheading}\r\n              </h3>\r\n            )}\r\n          </div>          \r\n        )}\r\n        \r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nFullWidthImageSmall.propTypes = {\r\n  img: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\r\n  title: PropTypes.string,\r\n  height: PropTypes.number,\r\n  subheading: PropTypes.string,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { graphql } from \"gatsby\";\r\nimport { getImage } from \"gatsby-plugin-image\";\r\nimport Layout from \"../components/Layout\";\r\nimport Content, { HTMLContent } from \"../components/Content\";\r\n\r\nimport FullWidthImage from \"../components/FullWidthImage\";\r\nimport FullWidthImageSmall from \"../components/FullWidthImageSmall\";\r\n\r\n// eslint-disable-next-line\r\nexport const DefaultPageTemplate = ({ title, content, contentComponent, image, subheading }) => {\r\n    const heroImage = getImage(image) || image;\r\n\r\n    const PageContent = contentComponent || Content;\r\n\r\n    return (\r\n        <div>\r\n            <FullWidthImageSmall img={heroImage} title={title} subheading={subheading} />\r\n            <section className=\"section section--gradient\">\r\n            <div className=\"container\">\r\n                <div className=\"columns\">\r\n                <div className=\"column is-10 is-offset-1\">\r\n                    <div className=\"section\">\r\n                    <PageContent className=\"content\" content={content} />\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nDefaultPageTemplate.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  content: PropTypes.string,\r\n  contentComponent: PropTypes.func,\r\n};\r\n\r\nconst DefaultPage = ({ data }) => {\r\n  const { markdownRemark: post } = data;\r\n\r\n  return (\r\n    <Layout>\r\n      <DefaultPageTemplate\r\n        contentComponent={HTMLContent}\r\n        title={post.frontmatter.title}\r\n        content={post.html}\r\n      />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nDefaultPage.propTypes = {\r\n  data: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default DefaultPage;\r\n\r\nexport const defaultPageQuery = graphql`\r\n  query DefaultPage($id: String!) {\r\n    markdownRemark(id: { eq: $id }) {\r\n      html\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["HTMLContent","content","className","dangerouslySetInnerHTML","__html","FullWidthImage","props","height","img","title","subheading","imgPosition","style","display","alignItems","backgroundColor","zIndex","url","src","objectFit","objectPosition","gridArea","width","aspectratio","alt","formats","G","image","maxHeight","minHeight","opacity","layout","paddingTop","position","placeItems","color","borderColor","lineHeight","padding","marginTop","textAlign","href","borderRadius","FullWidthImageSmall","marginBottom","DefaultPageTemplate","contentComponent","heroImage","getImage","PageContent","Content","post","data","markdownRemark","frontmatter","html"],"sourceRoot":""}