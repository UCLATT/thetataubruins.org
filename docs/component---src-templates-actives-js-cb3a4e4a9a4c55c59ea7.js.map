{"version":3,"file":"component---src-templates-actives-js-cb3a4e4a9a4c55c59ea7.js","mappings":"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","sources":["webpack://uclathetatau/./src/components/Content.js","webpack://uclathetatau/./src/components/Features.js","webpack://uclathetatau/./src/components/FullWidthImageSmall.js","webpack://uclathetatau/./src/components/PreviewCompatibleImage.js","webpack://uclathetatau/./src/templates/actives.js"],"sourcesContent":["import * as React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const HTMLContent = ({ content, className }) => (\r\n  <div className={className} dangerouslySetInnerHTML={{ __html: content }} />\r\n);\r\n\r\nconst Content = ({ content, className }) => (\r\n  <div className={className}>{content}</div>\r\n);\r\n\r\nContent.propTypes = {\r\n  content: PropTypes.node,\r\n  className: PropTypes.string,\r\n};\r\n\r\nHTMLContent.propTypes = Content.propTypes;\r\n\r\nexport default Content;\r\n","import * as React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport PreviewCompatibleImage from \"../components/PreviewCompatibleImage\";\r\nimport \"./styles.css\";\r\n\r\nconst FeatureGrid = ({ gridItems }) => (\r\n  <div className=\"columns is-multiline grid-columns\" \r\n  style = {{\r\n    width: \"100%\",\r\n    maxWidth: \"1200px\",\r\n    margin: \"0 auto\",\r\n  }}>\r\n    {gridItems.map((item) => (\r\n      <div key={item.text} className=\"column is-3\">\r\n        <section className=\"section\" style={{\r\n          \r\n        }}>\r\n          <div>\r\n            <div\r\n              style={{\r\n                width: \"100%\",\r\n                justifyContent: \"center\",\r\n                display: \"grid\",\r\n              }}\r\n            >\r\n              <PreviewCompatibleImage imageInfo={item}/>\r\n            </div>\r\n          </div>\r\n          <div style = {{\r\n            textAlign: \"center\",\r\n          }}>\r\n            <p style={{\r\n              fontWeight: \"bold\",\r\n              marginTop: \"5px\",\r\n              fontSize: \"1.2rem\",\r\n            }}>{item.text}</p>\r\n            <p>{item.major}</p>\r\n            <p>{item.year}</p>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nFeatureGrid.propTypes = {\r\n  gridItems: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\r\n      text: PropTypes.string,\r\n      major: PropTypes.string,\r\n      year: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default FeatureGrid;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { GatsbyImage } from \"gatsby-plugin-image\";\r\nimport \"./styles.css\";\r\n\r\nexport default function FullWidthImageSmall(props) {\r\n  const {\r\n    height = \"100vh\",\r\n    img,\r\n    title,\r\n    subheading,\r\n    imgPosition = \"center\",\r\n  } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        className=\"margin-top-0\"\r\n        style={{\r\n          display: \"grid\",\r\n          alignItems: \"center\",\r\n          backgroundColor: \"#40140f\",\r\n          zIndex: -1,\r\n          // backgroundColor: \"black\",\r\n        }}\r\n      >\r\n        {img?.url ? (\r\n          <img\r\n            src={img}\r\n            objectFit={\"cover\"}\r\n            objectPosition={imgPosition}\r\n            style={{\r\n              gridArea: \"1/1\",\r\n              // You can set a maximum height for the image, if you wish.\r\n              height: height,\r\n              width: \"100%\",\r\n            }}\r\n            // You can optionally force an aspect ratio for the generated image\r\n            aspectratio={3 / 1}\r\n            // This is a presentational image, so the alt should be an empty string\r\n            alt=\"\"\r\n            formats={[\"auto\", \"webp\", \"avif\"]}\r\n          />\r\n        ) : (\r\n          <GatsbyImage\r\n            image={img}\r\n            objectFit={\"cover\"}\r\n            objectPosition={imgPosition}\r\n            style={{\r\n              gridArea: \"1/1\",\r\n              // You can set a maximum height for the image, if you wish.\r\n              maxHeight: height,\r\n              minHeight: \"100vh\",\r\n              opacity: 0.5,\r\n            }}\r\n            layout=\"fullWidth\"\r\n            // You can optionally force an aspect ratio for the generated image\r\n            aspectratio={3 / 1}\r\n            // This is a presentational image, so the alt should be an empty string\r\n            alt=\"\"\r\n            formats={[\"auto\", \"webp\", \"avif\"]}\r\n          />\r\n        )}\r\n        {(title || subheading) && (\r\n          <div\r\n            style={{\r\n              // By using the same grid area for both, they are stacked on top of each other\r\n              paddingTop: \"10vmax\",\r\n              // paddingBottom: \"10vmax\",\r\n              gridArea: \"1/1\",\r\n              position: \"relative\",\r\n              // This centers the other elements inside the hero component\r\n              placeItems: \"center\",\r\n              display: \"grid\",\r\n            }}\r\n          >\r\n            {/* Any content here will be centered in the component */}\r\n            {title && (\r\n              <h1\r\n                className=\"has-text-weight-bold homefont\"\r\n                style={{\r\n                  // boxShadow:\r\n                    // \"rgb(255, 68, 0) 0.5rem 0px 0px, rgb(255, 68, 0) -0.5rem 0px 0px\",\r\n                  // backgroundColor: \"rgb(255, 68, 0)\",\r\n                  color: \"white\",\r\n                  borderColor: \"white\",\r\n                  lineHeight: \"1\",\r\n                  padding: \"0.25em\",\r\n                  // fontSize: \"3.5rem\",\r\n                }}\r\n              >\r\n                {title}\r\n              </h1>\r\n            )}\r\n            {subheading && (\r\n              <h3\r\n                className=\"is-size-5-mobile is-size-5-tablet is-size-4-widescreen\"\r\n                style={{\r\n                  // boxShadow:\r\n                  //   \"rgb(255, 68, 0) 0.5rem 0px 0px, rgb(255, 68, 0) -0.5rem 0px 0px\",\r\n                  // backgroundColor: \"rgb(255, 68, 0)\",\r\n                  color: \"white\",\r\n                  lineHeight: \"1\",\r\n                  padding: \"0.25rem\",\r\n                  marginTop: \"0.5rem\",\r\n                  textAlign: \"center\",\r\n                  marginBottom: \"3.3vmax\",\r\n                }}\r\n              >\r\n                {subheading}\r\n              </h3>\r\n            )}\r\n          </div>          \r\n        )}\r\n        \r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nFullWidthImageSmall.propTypes = {\r\n  img: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\r\n  title: PropTypes.string,\r\n  height: PropTypes.number,\r\n  subheading: PropTypes.string,\r\n};\r\n","import * as React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { GatsbyImage } from \"gatsby-plugin-image\";\r\n\r\nconst PreviewCompatibleImage = ({ imageInfo }) => {\r\n  const imageStyle = { borderRadius: \"5px\" };\r\n\r\n  const { alt = \"\", childImageSharp, image } = imageInfo;\r\n\r\n  if (!!image && !!image.childImageSharp) {\r\n    return (\r\n      <GatsbyImage\r\n        image={image.childImageSharp.gatsbyImageData}\r\n        style={imageStyle}\r\n        alt={alt}\r\n      />\r\n    );\r\n  } else if (!!childImageSharp) {\r\n    return (\r\n      <GatsbyImage\r\n        image={childImageSharp.gatsbyImageData}\r\n        style={imageStyle}\r\n        alt={alt}\r\n      />\r\n    );\r\n    // for Netlify CMS \r\n  } else if (image) {\r\n    return <img style={{imageStyle}} src={image} alt={alt} />;\r\n  } else {\r\n    return null\r\n  }\r\n};\r\n\r\nPreviewCompatibleImage.propTypes = {\r\n  imageInfo: PropTypes.shape({\r\n    alt: PropTypes.string,\r\n    childImageSharp: PropTypes.object,\r\n    image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired,\r\n    style: PropTypes.object,\r\n  }).isRequired,\r\n};\r\n\r\nexport default PreviewCompatibleImage;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { graphql } from \"gatsby\";\r\nimport Layout from \"../components/Layout\";\r\nimport Content, { HTMLContent } from \"../components/Content\";\r\nimport Features from \"../components/Features\";\r\n\r\nimport { getImage } from \"gatsby-plugin-image\";\r\n\r\nimport FullWidthImageSmall from \"../components/FullWidthImageSmall\";\r\n\r\n// eslint-disable-next-line\r\nexport const ActivesPageTemplate = ({\r\n  image,\r\n  title,\r\n  heading,\r\n  subheading,\r\n  mainpitch,\r\n  description,\r\n  classes,\r\n}) => {\r\n  const heroImage = getImage(image) || image;\r\n\r\n  return (\r\n    <div>\r\n      <FullWidthImageSmall img={heroImage} title={title} subheading={subheading} />\r\n\r\n      <p className = \"classHeader\" style={{\r\n        marginTop: \"40px\",\r\n      }}>Eta Class</p>\r\n      <Features gridItems={classes.eta} />\r\n\r\n      <p className = \"classHeader\">Lambda Class</p>\r\n      <Features gridItems={classes.lambda} />\r\n\r\n      <p className = \"classHeader\">Mu Class</p>\r\n      <Features gridItems={classes.mu} />\r\n      \r\n      <p className = \"classHeader\">Nu Class</p>\r\n      <Features gridItems={classes.nu} />\r\n\r\n      <p className = \"classHeader\">Xi Class</p>\r\n      <Features gridItems={classes.xi} />\r\n\r\n      <p className = \"classHeader\">Omicron Class</p>\r\n      <Features gridItems={classes.omicron} />\r\n\r\n      <p className = \"classHeader\">Pi Class</p>\r\n      <Features gridItems={classes.pi} />\r\n    </div>\r\n  );\r\n};\r\n\r\nActivesPageTemplate.propTypes = {\r\n  image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\r\n  title: PropTypes.string,\r\n  heading: PropTypes.string,\r\n  subheading: PropTypes.string,\r\n  mainpitch: PropTypes.object,\r\n  description: PropTypes.string,\r\n  classes: PropTypes.shape({\r\n    eta: PropTypes.array,\r\n    lambda: PropTypes.array,\r\n    mu: PropTypes.array,\r\n    nu: PropTypes.array,\r\n    xi: PropTypes.array,\r\n    omicron: PropTypes.array,\r\n    pi: PropTypes.array,\r\n  }),\r\n};\r\n\r\nconst ActivesPage = ({ data }) => {\r\n  const { frontmatter } = data.markdownRemark;\r\n\r\n  return (\r\n    <Layout>\r\n      <ActivesPageTemplate\r\n        image={frontmatter.image}\r\n        title={frontmatter.title}\r\n        heading={frontmatter.heading}\r\n        subheading={frontmatter.subheading}\r\n        mainpitch={frontmatter.mainpitch}\r\n        description={frontmatter.description}\r\n        classes={frontmatter.classes}\r\n      />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nActivesPage.propTypes = {\r\n  data: PropTypes.shape({\r\n    markdownRemark: PropTypes.shape({\r\n      frontmatter: PropTypes.object,\r\n    }),\r\n  }),\r\n};\r\n\r\nexport default ActivesPage;\r\nexport const ActivesPageQuery = graphql`\r\n  query ActivesPage($id: String!) {\r\n    markdownRemark(id: { eq: $id} frontmatter: { templateKey: { eq: \"actives\" } }) {\r\n      frontmatter {\r\n        title\r\n        image {\r\n          childImageSharp {\r\n            gatsbyImageData(quality: 100, layout: FULL_WIDTH)\r\n          }\r\n        }\r\n        heading\r\n        subheading\r\n        \r\n        classes {\r\n          eta {\r\n            image {\r\n              childImageSharp {\r\n                gatsbyImageData(width: 240, quality: 100, layout: CONSTRAINED)\r\n              }\r\n            }\r\n            text\r\n            major\r\n            year\r\n          }\r\n          lambda {\r\n            image {\r\n              childImageSharp {\r\n                gatsbyImageData(width: 240, quality: 100, layout: CONSTRAINED)\r\n              }\r\n            }\r\n            text\r\n            major\r\n            year\r\n          }\r\n          mu {\r\n            image {\r\n              childImageSharp {\r\n                gatsbyImageData(width: 240, quality: 100, layout: CONSTRAINED)\r\n              }\r\n            }\r\n            text\r\n            major\r\n            year\r\n          }\r\n          nu {\r\n            image {\r\n              childImageSharp {\r\n                gatsbyImageData(width: 240, quality: 100, layout: CONSTRAINED)\r\n              }\r\n            }\r\n            text\r\n            major\r\n            year\r\n          }\r\n          xi {\r\n            image {\r\n              childImageSharp {\r\n                gatsbyImageData(width: 240, quality: 100, layout: CONSTRAINED)\r\n              }\r\n            }\r\n            text\r\n            major\r\n            year\r\n          }\r\n          omicron {\r\n            image {\r\n              childImageSharp {\r\n                gatsbyImageData(width: 240, quality: 100, layout: CONSTRAINED)\r\n              }\r\n            }\r\n            text\r\n            major\r\n            year\r\n          }\r\n          pi {\r\n            image {\r\n              childImageSharp {\r\n                gatsbyImageData(width: 240, quality: 100, layout: CONSTRAINED)\r\n              }\r\n            }\r\n            text\r\n            major\r\n            year\r\n          }\r\n\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["HTMLContent","content","className","dangerouslySetInnerHTML","__html","gridItems","style","width","maxWidth","margin","map","item","key","text","justifyContent","display","imageInfo","textAlign","fontWeight","marginTop","fontSize","major","year","FullWidthImageSmall","props","height","img","title","subheading","imgPosition","alignItems","backgroundColor","zIndex","url","src","objectFit","objectPosition","gridArea","aspectratio","alt","formats","G","image","maxHeight","minHeight","opacity","layout","paddingTop","position","placeItems","color","borderColor","lineHeight","padding","marginBottom","imageStyle","borderRadius","childImageSharp","gatsbyImageData","ActivesPageTemplate","heading","classes","mainpitch","description","heroImage","getImage","eta","lambda","mu","nu","xi","omicron","pi","frontmatter","data","markdownRemark"],"sourceRoot":""}